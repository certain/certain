#!/usr/bin/python

"""Certificate Management System"""

import certain
import certain.daemon
import os
from optparse import OptionParser


def main():
    parser = OptionParser()
    parser.add_option("-c", "--config",
                      dest="config_file",
                      help="Specifies the config file to use \
                      if unset, defaults to /etc/certain/certain.cfg")
    parser.add_option("-m", "--makecert",
                      action="store_true", dest="makecert",
                      help="Setup a certificate and key on this system.")
    parser.add_option("-d", "--daemon",
                      action="store_true", dest="daemon",
                      help="Start Certain Daemon.")
    parser.add_option("-s", "--sign",
                      action="store_true", dest="sign",
                      help="View and sign queued CSRs.")
    parser.add_option("-g", "--get",
                      action="store_true", dest="get",
                      help="Update certificates from the central store.")
    parser.add_option("-p", "--pid-file",
                      dest="pidfile",
                      help="Specify an alternate PID file.",
                      default="/var/run/certain.pid")

    options, args = parser.parse_args()

    if options.config_file:
        certain.parse_config(options.config_file)

    certain.check_paths()

    if options.makecert:
        certain.make_cert()

    if options.daemon:
        if certain.config.get('global', 'LogLevel') != 'DEBUG':
	    certain.daemon.create_daemon()
        with open(options.pidfile, 'w') as f:
            f.write(str(os.getpid()))
        try:
            certain.launch_daemon()
        finally:
            os.unlink(options.pidfile)

    if options.sign:
        with certain.StoreHandler.dispatch(
                certain.config.get('store', 'StoreType')) as store:
            for csr in certain.pending_csrs():
                if not csr.csr:
                    dosign = raw_input(
                            "%s is not a CSR. Delete? [N/d]" % csr.csr_file
                        ).strip().lower()
                else:
                    dosign = raw_input(
                            "Sign CSR: %s (CN=%s) [N/y/d(elete)]? " % (
                                path.basename(csr.csr_filename),
                                csr.csr.get_subject().CN)
                        ).strip().lower()
                if csr.csr and dosign == 'y':
                    csr.store(store)
                elif dosign == 'd':
                    csr.remove()

    if options.get:
        with certain.StoreHandler.dispatch(
                certain.config.get('store', 'StoreType')) as store:
            store.fetch()

    if not any([options.makecert, options.daemon, options.sign, options.get]):
        parser.error("Must specify one of -m, -d, -s, -g or -h (--help)")

if __name__ == "__main__":
    main()
