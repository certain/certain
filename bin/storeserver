#!/usr/bin/python

"""Certificate Management System.

This program provides a server to distribute the delivered certificates to the
clients.

"""

from __future__ import absolute_import
import certain
import certain.daemon
from optparse import OptionParser
import sys


if sys.hexversion < 0x02060000:
    print >>sys.stderr, "Error: Python 2.6 or greater required."
    sys.exit(1)


def main():
    parser = OptionParser()
    parser.add_option("-c", "--config",
                      dest="config_file",
                      help="Specifies the config file to use. "
                      "If unset, defaults to /etc/certain/certain.conf")
    parser.add_option("-d", "--daemon",
                      action="store_true", dest="daemon",
                      help="Start StoreServer daemon.")
    parser.add_option("-f", "--foreground",
                      action="store_true", dest="foreground",
                      help="Force the daemon to run in the foreground.")
    parser.add_option("-p", "--pid-file",
                      dest="pidfile",
                      help="Specify an alternate PID file.",
                      default="/var/run/certain/storeserver.pid")

    options, args = parser.parse_args()

    if options.config_file:
        certain.parse_config(options.config_file)

    name = certain.config.get('store', 'StoreServer')
    storeserver = __import__('certain.StoreServer.' + name, fromlist=name)

    if (os.getuid() == 0):
        # We don't want to run as root - time to drop privs
        # If we're running as non-root, assume we're already
        # running as a suitable account and do nothing.
        uid, gid = pwd.getpwnam('certain')[2:4]
        os.setgid(gid)
        os.setuid(uid)

    # If the log level is not set to debug, make the server a daemon.
    if (certain.config.get('global', 'LogLevel') != 'DEBUG' or
            options.daemon) and not options.foreground:
        certain.daemon.create_daemon()

    with certain.pidfile(options.pidfile):
        storeserver.main()

if __name__ == "__main__":
    main()
