#!/usr/bin/python

"""Certificate Management System"""

import certmgr
from optparse import OptionParser


def main():
    certmgr.check_paths()

    parser = OptionParser()
    parser.add_option("-o", "--config",
                      dest="config_file",
                      help="Specifies the config file to use \
                      if unset, defaults to /etc/certmgr/certmgr.cfg")
    parser.add_option("-m", "--makecerts",
                      action="store_true", dest="makecerts",
                      help="Setup certificates on your system.")
    parser.add_option("-d", "--daemon",
                      action="store_true", dest="daemon",
                      help="Start CertMgr Daemon.")
    parser.add_option("-c", "--check",
                      action="store_true", dest="check",
                      help="Check status of own CA and Client certificates.")
    parser.add_option("-x", "--sign",
                      action="store_true", dest="sign",
                      help="View and sign queued CSRs.")
    parser.add_option("-s", "--send",
                      action="store_true", dest="send",
                      help="Send a CSR file to the CertMgr Master.")
    parser.add_option("-g", "--get",
                      action="store_true", dest="get",
                      help="Update certificates from the central store.")
    parser.add_option("-f", "--file",
                      dest="file",
                      help="Specifies the CSR file to be sent with --send.  \
                      If unset, defaults to client CSR.")

    parser.set_defaults(makecerts=False, daemon=False, send=False)
    (options, args) = parser.parse_args()

    if options.config_file:
        certmgr.parse_config(options.config_file)
    else:
        certmgr.parse_config('/etc/certmgr/certmgr.cfg')

    if options.makecerts:
        certmgr.make_certs()

    if options.daemon:
        certmgr.launch_daemon()

    if options.send:
        certmgr.send_csr(options.file)

    if options.sign:
        with certmgr.StoreHandler.dispatch(
                certmgr.config.get('global', 'StoreType')) as store:
            for csr in certmgr.pending_csrs():
                if not csr.csr:
                    dosign = raw_input(
                            "%s is not a CSR. \
                            Delete? [N/d]" % csr.csr_file).strip().lower()
                else:
                    dosign = raw_input(
                            "Sign CSR %s (CN=%s) [N/y/d(elete)]? " % (
                                csr.csr_file,
                                csr.csr.get_subject().CN)).strip().lower()
                if csr.csr and dosign == 'y':
                    csr.store(store)
                elif dosign == 'd':
                    csr.remove()

    if options.check:
        certmgr.check_status()

    if options.get:
        with certmgr.StoreHandler.dispatch(
                certmgr.config.get('global', 'StoreType')) as store:
            store.fetch()

if __name__ == "__main__":
    main()
